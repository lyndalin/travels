addPolygons(weight=0.5,
smoothFactor = 0.5,
color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state,
highlightOptions = highlightOptions(color="black", weight=2, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Did not visit", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
leaflet(states_merged) %>% addTiles() %>% setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "gray", fill=FALSE) %>%
addPolygons(weight=10,
smoothFactor = 0.5,
color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=FALSE,
label = ~state,
highlightOptions = highlightOptions(color="black", weight=2, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Did not visit", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
leaflet(states_merged) %>% addTiles() %>% setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "gray", fill=FALSE) %>%
addPolygons(weight=10,
smoothFactor = 0.5,
color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state,
highlightOptions = highlightOptions(color="black", weight=2, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Did not visit", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
leaflet(states_merged) %>% addTiles() %>% setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "gray", fill=FALSE) %>%
addPolygons(weight=0.5,
smoothFactor = 0.5,
color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state,
highlightOptions = highlightOptions(color="black", weight=2, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Did not visit", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
leaflet(states_merged) %>% addTiles() %>% setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "gray", fill=FALSE) %>%
addPolygons(weight=0.5,
smoothFactor = 0.5,
#color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state,
highlightOptions = highlightOptions(color="black", weight=2, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Did not visit", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
leaflet(states_merged) %>% addTiles() %>% setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "gray", fill=FALSE) %>%
addPolygons(weight=0.5,
smoothFactor = 0.5,
#color=~mypalette(visited),
color="black",
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state,
highlightOptions = highlightOptions(color="black", weight=2, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Did not visit", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
leaflet(states_merged) %>% addTiles() %>% setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "gray", fill=FALSE) %>%
addPolygons(weight=0.5,
smoothFactor = 0.5,
color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state,
highlightOptions = highlightOptions(color="black", weight=2, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Did not visit", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
leaflet(states_merged) %>% addTiles() %>% setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "gray", fill=FALSE) %>%
addPolygons(weight=0.5,
smoothFactor = 0.5,
color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state,
highlightOptions = highlightOptions(color="black", weight=2, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Did not visit", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
leaflet(states_merged) %>% addTiles() %>% setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "gray", fill=FALSE) %>%
addPolygons(weight=0.5,
smoothFactor = 0.5,
color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state,
highlightOptions = highlightOptions(color="black", weight=5, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Did not visit", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
leaflet(states_merged) %>% addTiles() %>% setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "gray", fill=FALSE) %>%
addPolygons(weight=0.5,
smoothFactor = 0.5,
color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state,
highlightOptions = highlightOptions(color="black", weight=8, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Did not visit", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
leaflet(states_merged) %>% addTiles() %>% setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "gray", fill=FALSE) %>%
addPolygons(weight=0.5,
smoothFactor = 0.5,
color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state,
highlightOptions = highlightOptions(color="black", weight=2, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Did not visit", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
leaflet(states_merged) %>% addTiles() %>% setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "gray", fill=FALSE) %>%
addPolygons(weight=0.5,
smoothFactor = 0.5,
color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state,
highlightOptions = highlightOptions(color="black", weight=1, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Did not visit", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
leaflet(states_merged) %>% addTiles() %>% setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "gray", fill=FALSE) %>%
addPolygons(weight=0.5,
smoothFactor = 0.5,
color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state,
highlightOptions = highlightOptions(color="black", weight=3, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Did not visit", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
leaflet(states_merged) %>%
addTiles() %>%
setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "gray", fill=FALSE) %>%
addPolygons(weight=0.5,
smoothFactor = 0.5,
color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state,
highlightOptions = highlightOptions(color="black", weight=3, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Did not visit", "Visited"), opacity=0.5, title="States visited", position="bottomleft")
detach("package:tigris", unload=TRUE)
detach("package:geojsonio", unload=TRUE)
detach("package:rgdal", unload=TRUE)
# Install packages
library(leaflet)
library(htmltools)
# Set working directory
setwd("/Users/llin/Lynda/Varios/Github/projects/travel/")
list.files()
# Read in data
cities_visited_world <- read.csv("cities_visited_world.csv")
states_visited_usa <- read.csv("states_visited_usa.csv")
pal <- colorFactor(palette = c("#228B22", "#6A5ACD", "#FF0000", "#FFA500", "#4682B4"),
domain = cities_visited_world$continent)
# Then specify labels for each data point
labels = paste(cities_visited_world$city, "<br/>", cities_visited_world$country) %>% lapply(htmltools::HTML)
leaflet(cities_visited_world) %>%
addProviderTiles("OpenStreetMap") %>%
addCircleMarkers(lng=~lon, lat=~lat,
popup = ~city,
#label = paste0(cities_visited_world$city, ", ", cities_visited_world$country),
label=labels,
color = ~pal(continent),
radius=3,
stroke=TRUE, fillOpacity=0.5)
# Cluster circles
leaflet(cities_visited_world) %>%
addTiles() %>%
addCircleMarkers(lng=~lon, lat=~lat,
popup = ~city,
#label = paste0(cities_visited_world$city, ", ", cities_visited_world$country),
label=labels,
color = ~pal(continent),
radius=3,
stroke=TRUE, fillOpacity=0.5,
clusterOptions = markerClusterOptions())
# Read in data
states_visited_usa <- read.csv("states_visited_usa.csv")
# Get polygons for US States. There are multiple ways
# 1 - From tigris package
library(tigris)
us_states <- states(cb=TRUE, resolution="20m")
# Merge US states polygon data with data frame indicating the states visited/not visited
states_merged <- geo_join(us_states, states_visited_usa, "NAME", "state")
# Choose colors for states visited / not visited
visited_color_1 <- "#0000CD"
not_visited_color_0 <- "#66CD00"
mypalette <- colorNumeric(c(not_visited_color_0, visited_color_1), c(0,1), na.color="transparent") # (or convert the $visited to factor and use colorFactor)
mypalette(c(0,1)) #Colors chosen for values 0 and 1
leaflet(states_merged) %>%
addTiles() %>%
setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "gray", fill=FALSE) %>%
addPolygons(weight=0.5,
smoothFactor = 0.5,
color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state,
highlightOptions = highlightOptions(color="black", weight=3, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Did not visit", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
# 2 - From geojsonio (https://rstudio.github.io/leaflet/choropleths.html)
library(geojsonio)
us_states <- geojsonio::geojson_read("json/us-states.geojson", what = "sp")
# 3 - From a shape file downloaded from census.gov and reading it using the rgdal package
# https://rstudio.github.io/leaflet/shapes.html
# From https://www.census.gov/geo/maps-data/data/cbf/cbf_state.html
library(rgdal)
us_states <- readOGR("./shp/cb_2017_us_state_20m.shp",
layer = "cb_2017_us_state_20m", GDAL1_integer64_policy = TRUE)
# Merge US states polygon data with data frame indicating the states visited/not visited
states_merged <- geo_join(us_states, states_visited_usa, "NAME", "state")
detach("package:tigris", unload=TRUE)
# Merge US states polygon data with data frame indicating the states visited/not visited
states_merged <- geo_join(us_states, states_visited_usa, "NAME", "state")
# Merge US states polygon data with data frame indicating the states visited/not visited
states_merged <- geo_join(us_states, states_visited_usa, "NAME", "state") #geo_join is from the tigris package
library("tigris", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
# Merge US states polygon data with data frame indicating the states visited/not visited
states_merged <- geo_join(us_states, states_visited_usa, "NAME", "state") #geo_join is from the tigris package
# Choose colors for states visited / not visited
visited_color_1 <- "#0000CD"
not_visited_color_0 <- "#66CD00"
mypalette <- colorNumeric(c(not_visited_color_0, visited_color_1), c(0,1), na.color="transparent") # (or convert the $visited to factor and use colorFactor)
mypalette(c(0,1)) #Colors chosen for values 0 and 1
leaflet(states_merged) %>%
addTiles() %>%
setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "gray", fill=FALSE) %>%
addPolygons(weight=0.5,
smoothFactor = 0.5,
color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state,
highlightOptions = highlightOptions(color="black", weight=3, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Did not visit", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
# Set working directory
setwd("/Users/llin/Lynda/Varios/Github/projects/travels/website/data")
# Set working directory
setwd("/Users/llin/Lynda/Varios/Github/projects/travels/website/")
list.files()
# Read in data
cities_visited_world <- read.csv("/data/cities_visited_world.csv")
# Read in data
cities_visited_world <- read.csv("data/cities_visited_world.csv")
states_visited_usa <- read.csv("data/states_visited_usa.csv")
leaflet(cities_visited_world) %>%
addProviderTiles("OpenStreetMap") %>%
addCircleMarkers(lng=~lon, lat=~lat,
popup = ~city,
#label = paste0(cities_visited_world$city, ", ", cities_visited_world$country),
label=labels,
color = ~pal(continent),
radius=3,
stroke=TRUE, fillOpacity=0.5)
m <- leaflet(cities_visited_world) %>%
addProviderTiles("OpenStreetMap") %>%
addCircleMarkers(lng=~lon, lat=~lat,
popup = ~city,
#label = paste0(cities_visited_world$city, ", ", cities_visited_world$country),
label=labels,
color = ~pal(continent),
radius=3,
stroke=TRUE, fillOpacity=0.5)
library(htmlwidgets)
saveWidget(m, file="m.html")
getwd()
detach("package:tigris", unload=TRUE)
# Install packages
library(leaflet)
library(htmltools)
library(htmlwidgets)
# Set working directory
setwd("/Users/llin/Lynda/Varios/Github/projects/travels/website/code")
# Read in data
cities_visited_world <- read.csv("data/cities_visited_world.csv")
states_visited_usa <- read.csv("data/states_visited_usa.csv")
pal <- colorFactor(palette = c("#228B22", "#6A5ACD", "#FF0000", "#FFA500", "#4682B4"),
domain = cities_visited_world$continent)
pal("Asia")
# Then specify labels for each data point
labels = paste(cities_visited_world$city, "<br/>", cities_visited_world$country) %>% lapply(htmltools::HTML)
m <- leaflet(cities_visited_world) %>%
addProviderTiles("OpenStreetMap") %>%
addCircleMarkers(lng=~lon, lat=~lat,
popup = ~city,
#label = paste0(cities_visited_world$city, ", ", cities_visited_world$country),
label=labels,
color = ~pal(continent),
radius=3,
stroke=TRUE, fillOpacity=0.5)
# Then specify labels for each data point
labels = paste(cities_visited_world$city, "<br/>", cities_visited_world$country) %>% lapply(htmltools::HTML)
cities_visited_world_map <- leaflet(cities_visited_world) %>%
addProviderTiles("OpenStreetMap") %>%
addCircleMarkers(lng=~lon, lat=~lat,
popup = ~city,
#label = paste0(cities_visited_world$city, ", ", cities_visited_world$country),
label=labels,
color = ~pal(continent),
radius=3,
stroke=TRUE, fillOpacity=0.5)
cities_visited_world_map
cities_visited_world_map_cluster <- leaflet(cities_visited_world) %>%
addTiles() %>%
addCircleMarkers(lng=~lon, lat=~lat,
popup = ~city,
#label = paste0(cities_visited_world$city, ", ", cities_visited_world$country),
label=labels,
color = ~pal(continent),
radius=3,
stroke=TRUE, fillOpacity=0.5,
clusterOptions = markerClusterOptions())
cities_visited_world_map_cluster
# Save the map as a widget to upload to a website
saveWidget(cities_visited_world_map, file="cities_visited_world_map.html")
# Get polygons for US States. There are multiple ways
# 1 - From tigris package
library(tigris)
us_states <- states(cb=TRUE, resolution="20m")
# 3 - From a shape file downloaded from census.gov and reading it using the rgdal package
# https://rstudio.github.io/leaflet/shapes.html
# From https://www.census.gov/geo/maps-data/data/cbf/cbf_state.html
library(rgdal)
us_states <- readOGR("./shp/cb_2017_us_state_20m.shp",
layer = "cb_2017_us_state_20m", GDAL1_integer64_policy = TRUE)
# Merge US states polygon data with data frame indicating the states visited/not visited
states_merged <- geo_join(us_states, states_visited_usa, "NAME", "state") #geo_join is from the tigris package
# Choose colors for states visited / not visited
visited_color_1 <- "#0000CD"
not_visited_color_0 <- "#66CD00"
mypalette <- colorNumeric(c(not_visited_color_0, visited_color_1), c(0,1), na.color="transparent") # (or convert the $visited to factor and use colorFactor)
mypalette(c(0,1)) #Colors chosen for values 0 and 1
pal(0)
mypalette(0)
not_visited_color_0 <- "black"
mypalette <- colorNumeric(c(not_visited_color_0, visited_color_1), c(0,1), na.color="transparent") # (or convert the $visited to factor and use colorFactor)
mypalette(c(0,1)) #Colors chosen for values 0 and 1
mypalette(0)
not_visited_color_0 <- "gray"
mypalette <- colorNumeric(c(not_visited_color_0, visited_color_1), c(0,1), na.color="transparent") # (or convert the $visited to factor and use colorFactor)
mypalette(c(0,1)) #Colors chosen for values 0 and 1
mypalette(0)
# Choose colors for states visited / not visited
visited_color_1 <- "#0000CD"
not_visited_color_0 <- "#66CD00"
mypalette <- colorNumeric(c(not_visited_color_0, visited_color_1), c(0,1), na.color="transparent") # (or convert the $visited to factor and use colorFactor)
mypalette(c(0,1)) #Colors chosen for values 0 and 1
us_states_visited_map <- leaflet(states_merged) %>%
addTiles() %>%
setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "gray", fill=FALSE) %>%
addPolygons(weight=0.5,
smoothFactor = 0.5,
color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state, #Adds label
highlightOptions = highlightOptions(color="black", weight=3, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Did not visit", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
us_states_visited_map
us_states_visited_map <- leaflet(states_merged) %>%
addTiles() %>%
setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "#BEBEBE", fill=FALSE) %>%
addPolygons(weight=0.5,
smoothFactor = 0.5,
color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state, #Adds label
highlightOptions = highlightOptions(color="#000000", weight=3, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Did not visit", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
us_states_visited_map
us_states_visited_map <- leaflet(states_merged) %>%
addTiles() %>%
setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "#BEBEBE", fill=FALSE) %>%
addPolygons(weight=0.5,
smoothFactor = 0.5,
color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state, #Show state label when mouse is on the state
highlightOptions = highlightOptions(color="#000000", weight=3, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Did not visit", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
us_states_visited_map
us_states_visited_map <- leaflet(states_merged) %>%
addTiles() %>%
setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "#BEBEBE", fill=FALSE) %>%
addPolygons(weight=0.5,
smoothFactor = 0.5,
color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state, #Show state label when mouse is on the state
highlightOptions = highlightOptions(color="#000000", weight=3, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Did not visit", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
us_states_visited_map <- leaflet(states_merged) %>%
addTiles() %>%
setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "#BEBEBE", fill=FALSE) %>%
addPolygons(weight=0.5,
smoothFactor = 0.5,
color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state, #Show state label when mouse is on the state
highlightOptions = highlightOptions(color="#000000", weight=3, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Did not visit", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
us_states_visited_map
# Save the map as a widget to upload to a website
saveWidget(us_states_visited_map, file="us_states_visited_map.html")
us_states_visited_map <- leaflet(states_merged) %>%
addTiles() %>%
setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "#BEBEBE", fill=FALSE) %>%
addPolygons(weight=0.5,
smoothFactor = 0.5,
color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state, #Show state label when mouse is on the state
highlightOptions = highlightOptions(color="#000000", weight=3, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Have not visited", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
us_states_visited_map <- leaflet(states_merged) %>%
addTiles() %>%
setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "#BEBEBE", fill=FALSE) %>%
addPolygons(weight=0.5,
smoothFactor = 0.5,
color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state, #Show state label when mouse is on the state
highlightOptions = highlightOptions(color="#000000", weight=3, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Have not visited", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
us_states_visited_map <- leaflet(states_merged) %>%
addTiles() %>%
setView(lat=39.83, lng=-98.58, zoom=4) %>%
addPolygons(weight=1, smoothFactor=0.2, color = "#BEBEBE", fill=FALSE) %>%
addPolygons(weight=0.5,
smoothFactor = 0.5,
color=~mypalette(visited),
fillColor = ~mypalette(visited),
opacity = 0.5,
fillOpacity = 0.4,
stroke=TRUE,
label = ~state, #Show state label when mouse is on the state
highlightOptions = highlightOptions(color="#000000", weight=3, bringToFront=TRUE)) %>% #highlights moused-over polygon
addLegend(data=states_merged, colors=c("#66CD00", "#0000CD"), labels=c("Have not visited", "Visited"), opacity=0.4, title="States visited", position="bottomleft")
us_states_visited_map
# Save the map as a widget to upload to a website
saveWidget(us_states_visited_map, file="us_states_visited_map.html")
# Set working directory
setwd("/Users/llin/Lynda/Varios/Github/projects/travels/website/code")
knitr::opts_chunk$set(echo = TRUE)
# Set working directory
setwd("/Users/llin/Lynda/Varios/Github/projects/travels/website/code")
# Set working directory
setwd("/Users/llin/Lynda/Varios/Github/projects/travels/website/code")
# Read in data
cities_visited_world <- read.csv("data/cities_visited_world.csv")
